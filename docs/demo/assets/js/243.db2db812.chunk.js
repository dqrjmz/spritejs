(window.webpackJsonp=window.webpackJsonp||[]).push([[243],{759:function(n,e,o){"use strict";o.r(e),e.default="const vertex = `\n  attribute vec3 a_vertexPosition;\n  attribute vec4 a_color;\n  varying vec4 vColor;\n\n  uniform mat3 viewMatrix;\n  uniform mat3 projectionMatrix;\n\n  void main() {\n    gl_PointSize = 1.0;\n    vec3 pos = projectionMatrix * viewMatrix * vec3(a_vertexPosition.xy, 1.0);\n    gl_Position = vec4(pos.xy, 1.0, 1.0);\n    vColor = a_color;\n  }\n`;\n\nconst fragment = `\n  precision mediump float;\n  uniform vec4 u_color;\n  uniform vec2 u_resolution;\n  varying vec4 vColor;\n\n  void main() {\n    vec2 st = gl_FragCoord.xy / u_resolution;\n    float d = (st.x - st.y) / sqrt(2.0);\n    d = fract(d * 50.0);\n    d = 1.0 - abs(d);\n    d = smoothstep(0.3, 0.4, d) - smoothstep(0.8, 0.9, d);\n    gl_FragColor = d * vColor;\n  }\n`;\n\nconst container = document.getElementById('stage');\n\nconst scene = new spritejs.Scene({\n  container,\n  width: 600,\n  height: 600,\n});\n\nconst fglayer = scene.layer('fglayer');\n\ndocument.querySelector('#stage canvas').style.backgroundColor = '#eee';\n\nconst program = fglayer.renderer.createProgram({vertex, fragment});\n\nconst s = new spritejs.Ellipse();\ns.attr({\n  radius: [100, 50],\n  pos: [300, 300],\n  fillColor: 'blue',\n});\ns.setProgram(program);\nconst {width, height} = fglayer.getResolution();\ns.setUniforms({\n  u_resolution: [width, height],\n});\nfglayer.append(s);"}}]);