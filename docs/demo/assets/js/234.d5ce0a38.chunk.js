(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{750:function(n,e,t){"use strict";t.r(e),e.default="/* globals Proton */\nconst {Scene, ProtonRenderer} = spritejs;\nconst container = document.getElementById('container');\n\nconst scene = new Scene({\n  container,\n  width: 600,\n  height: 600,\n});\n\nconst layer = scene.layer('fglayer', {autoRender: false, handleEvent: false});\n\nconst proton = new Proton();\nconst emitter = new Proton.Emitter();\n\n// set Rate\nemitter.rate = new Proton.Rate(Proton.getSpan(10, 20), 0.1);\n\n// add Initialize\nemitter.addInitialize(new Proton.Radius(1, 12));\nemitter.addInitialize(new Proton.Life(2, 4));\nemitter.addInitialize(new Proton.Velocity(3, Proton.getSpan(0, 360), 'polar'));\n\n// add Behaviour\nemitter.addBehaviour(new Proton.Color('#ff0000', 'random'));\nemitter.addBehaviour(new Proton.Alpha(1, 0));\n\n// set emitter position\nemitter.p.x = layer.canvas.width / 2;\nemitter.p.y = layer.canvas.height / 2;\nemitter.emit(5);\n\n// add emitter to the proton\nproton.addEmitter(emitter);\n\n// add canvas renderer\nconst renderer = new ProtonRenderer(layer);\nproton.addRenderer(renderer);\n\n// use Euler integration calculation is more accurate (default false)\nProton.USE_CLOCK = false;\n// proton.update()\nfunction tick() {\n  requestAnimationFrame(tick);\n  proton.update();\n}\ntick();"}}]);