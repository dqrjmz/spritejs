(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{630:function(n,e,t){"use strict";t.r(e),e.default="const vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform mat3 normalMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vec3 normal = normalize(vNormal);\n        float lighting = dot(normal, normalize(vec3(-0.3, 0.8, 0.6)));\n        gl_FragColor.rgb = vec3(0.2, 0.8, 1.0) + lighting * 0.1;\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nconst {Scene} = spritejs;\nconst {Cube} = spritejs.ext3d;\nconst container = document.getElementById('container');\nconst scene = new Scene({\n  container,\n  displayRatio: 2,\n});\nconst layer = scene.layer3d('fglayer', {\n  handleEvent: false,\n  camera: {\n    fov: 35,\n    far: 3000,\n  },\n});\nconst program = layer.createProgram({\n  vertex,\n  fragment,\n});\n\nconst count = 2000;\nconst cubeModel = new Cube(program); // shared model\nfor(let i = 0; i < count; ++i) {\n  const cube = cubeModel.cloneNode();\n  cube.attributes.pos = [\n    -100 + Math.random() * 200,\n    -100 + Math.random() * 200,\n    -100 + Math.random() * 200,\n  ];\n\n  cube.attributes.rotate = [Math.random() * 3, Math.random() * 3, Math.random() * 3];\n  layer.append(cube);\n}\n\nconst children = layer.children;\n\nlayer.tick((t) => {\n  const time = t / 30000;\n  layer.camera.attributes.pos = [Math.sin(time) * 180, 80, Math.cos(time) * 180];\n  layer.camera.lookAt([0, 0, 0]);\n  for(let i = 0; i < children.length; ++i) {\n    children[i].attributes.rotateX += 1.2;\n    children[i].attributes.rotateY += 1.2;\n  }\n});\n"}}]);