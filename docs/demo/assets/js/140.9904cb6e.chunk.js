(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{656:function(n,e,t){"use strict";t.r(e),e.default="const {Scene, Rect} = spritejs;\nconst container = document.getElementById('stage');\nconst scene = new Scene({\n  container,\n  width: 600,\n  height: 600,\n  contextType: '2d',\n});\nconst layer = scene.layer({\n  autoRender: false,\n});\n\nconst rect = new Rect({\n  normalize: true,\n  pos: [300, 300],\n  size: [100, 100],\n  fillColor: 'red',\n  opacity: 0.5,\n});\nlayer.append(rect);\n\n/* globals curvejs */\nconst {Stage, Curve} = curvejs;\nconst canvas = layer.canvas;\nconst stage = new Stage(canvas);\nconst rd = () => -2 + Math.random() * 2;\nconst curve = new Curve({\n  color: '#00FF00',\n  points: [277, 327, 230, 314, 236, 326, 257, 326],\n  data: [rd(), rd(), rd(), rd(), rd(), rd(), rd(), rd()],\n  motion: function motion(points, data) {\n    points.forEach((item, index) => {\n      points[index] += data[index];\n\n      if(points[index] < 0) {\n        points[index] = 0;\n        data[index] *= -1;\n      }\n      if(index % 2 === 0) {\n        if(points[index] > canvas.width) {\n          points[index] = canvas.width;\n          data[index] *= -1;\n        }\n      } else if(points[index] > canvas.height) {\n        points[index] = canvas.height;\n        data[index] *= -1;\n      }\n    });\n  },\n});\nstage.add(curve);\n\nlet ang = 0;\nfunction tick() {\n  stage.update();\n  rect.attributes.rotate = ang++;\n  layer.render({clear: false});\n  requestAnimationFrame(tick);\n}\n\ntick();"}}]);