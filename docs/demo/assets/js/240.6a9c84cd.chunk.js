(window.webpackJsonp=window.webpackJsonp||[]).push([[240],{756:function(n,o,t){"use strict";t.r(o),o.default="function sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n\n(async function () {\n  /* globals Animator */\n  const {Scene, Path, Gradient} = spritejs;\n  const container = document.getElementById('stage');\n  const scene = new Scene({\n    container,\n    width: 1600,\n    height: 1200,\n    mode: 'stickyWidth',\n  });\n\n  async function ray() {\n    const s = new Path();\n\n    const pos = [200 + 1200 * Math.random(), 200 + 800 * Math.random()];\n    const rotate = 360 * Math.random();\n    const controller = Math.random() * 340 + 10;\n\n    const color = [127 + 128 * Math.random(), 255 * Math.random(), 128 * Math.random()].map(Math.round);\n\n    s.attr({\n      pos,\n      rotate,\n      lineWidth: 6,\n      d: `M10,80 q${controller},-80 350,0`,\n    });\n\n    scene.layer().append(s);\n\n\n    const a1 = new Animator(3000, (p) => {\n      let q = 0;\n\n      if(p > 0.618) {\n        q = 1 - (1 - p) / 0.382;\n      }\n\n      p = Math.min(p / 0.7, 1);\n\n      const colors = [\n        {offset: 0, color: `rgba(${color[0]},${color[1]},${color[2]},0)`},\n        {offset: q, color: `rgba(${color[0]},${color[1]},${color[2]},0)`},\n        {offset: p, color: `rgba(${color[0]},${color[1]},${color[2]},1)`},\n        {offset: Math.min(p + 0.06, 1), color: `rgba(${color[0]},${color[1]},${color[2]},0)`},\n      ];\n\n      const len = s.getPathLength();\n      const [x, y] = s.getPointAtLength(p * len);\n      const vector = [0, 0, x + 5, y];\n\n      const gradient = new Gradient({\n        vector,\n        colors,\n      });\n\n      s.attr({strokeColor: gradient});\n    });\n\n    await a1.animate();\n    s.remove();\n  }\n\n  do {\n    ray();\n    const delay = Math.random() * 500 + 200;\n    await sleep(delay); // eslint-disable-line no-await-in-loop\n  } while(1);\n}());"}}]);