(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{741:function(e,n,t){"use strict";t.r(n),n.default="/* globals Proton */\nconst {Scene, Block, ProtonRenderer} = spritejs;\nconst container = document.getElementById('container');\nconst scene = new Scene({\n  container,\n  autoRender: false,\n  handleEvent: false,\n  preserveDrawingBuffer: true,\n});\n\nconst layer = scene.layer();\n\nconst mask = new Block();\nmask.setResolution(layer.getResolution());\nmask.attributes.width = layer.width;\nmask.attributes.height = layer.height;\nmask.attributes.bgcolor = 'rgba(0, 0, 0, 0.03)';\n\n\nfunction createRender() {\n  const renderer = new ProtonRenderer(layer);\n  renderer.onProtonUpdate = function () {\n    // context.fillStyle = \"rgba(0, 0, 0, 0.03)\";\n    // context.fillRect(0, 0, canvas.width, canvas.height);\n    layer.renderer.drawMeshes(mask.draw());\n    layer.render({clear: false});\n  };\n  return renderer;\n}\n\nfunction createProton() {\n  let _over = false,\n    _currentBehaviour;\n\n  const proton = new Proton();\n  const emitter = new Proton.Emitter();\n  emitter.rate = new Proton.Rate(1, 0.3);\n  emitter.addInitialize(new Proton.Mass(1));\n  emitter.addInitialize(new Proton.Radius(3));\n  emitter.addBehaviour(new Proton.Alpha(1, 0));\n  let hcolor = 0;\n  const color = Color.parse(`hsl(${hcolor}, 100%, 50%)`).hexTriplet(); // eslint-disable-line no-undef\n  const colorBehaviour = new Proton.Color(color);\n  emitter.addBehaviour(colorBehaviour);\n\n  function changeBehaviour(be) {\n    if(_over) {\n      emitter.removeAllParticles();\n      emitter.removeBehaviour(_currentBehaviour);\n      emitter.addBehaviour(be);\n      _currentBehaviour = be;\n      _over = false;\n    }\n  }\n  let rouletteBehaviour; // eslint-disable-line prefer-const\n  const circleBehaviour = {\n    dead: false,\n    initialize(particle) {\n      particle.theta = 0;\n    },\n    applyBehaviour(particle) {\n      if(!this.dead) {\n        particle.theta += Math.PI / 200;\n        const b = 100;\n        const a = 62.5;\n        particle.p.x = emitter.p.x + (a + b) * Math.cos(particle.theta) - b * Math.cos((a / b + 1) * particle.theta);\n        particle.p.y = emitter.p.y + (a + b) * Math.sin(particle.theta) - b * Math.sin((a / b + 1) * particle.theta);\n        if(particle.theta > Math.PI * 16 * 3) {\n          particle.dead = true;\n          _over = true;\n          changeBehaviour(rouletteBehaviour);\n        }\n      }\n    },\n  };\n  rouletteBehaviour = {\n    dead: false,\n    initialize(particle) {\n      particle.theta = 0;\n    },\n    applyBehaviour(particle) {\n      if(!this.dead) {\n        particle.theta += Math.PI / 150;\n        const a = 280;\n        const b = 392;\n        const c = 124;\n        particle.p.x = emitter.p.x + (a - b) * Math.cos(particle.theta) + c * Math.cos((a / b - 1) * particle.theta);\n        particle.p.y = emitter.p.y + (a - b) * Math.sin(particle.theta) - c * Math.sin((a / b - 1) * particle.theta);\n        if(particle.theta > Math.PI * 14 * 2) {\n          particle.dead = true;\n          _over = true;\n          changeBehaviour(circleBehaviour);\n        }\n      }\n    },\n  };\n\n  emitter.addBehaviour(circleBehaviour);\n  _currentBehaviour = circleBehaviour;\n  emitter.p.x = layer.canvas.width / 2;\n  emitter.p.y = layer.canvas.height / 2;\n  emitter.emit();\n  proton.addEmitter(emitter);\n  setInterval(() => {\n    hcolor++;\n    const color = Color.parse(`hsl(${hcolor % 360}, 100%, 50%)`).hexTriplet(); // eslint-disable-line no-undef\n    colorBehaviour.reset(color);\n  }, 100);\n  proton.addRenderer(createRender());\n  proton.addEmitter(addDot());\n\n  return proton;\n}\n\nfunction addDot() {\n  const emitter = new Proton.Emitter();\n  emitter.rate = new Proton.Rate(new Proton.Span(2, 4), new Proton.Span(0.05, 0.2));\n  emitter.addInitialize(new Proton.Mass(1));\n  emitter.addInitialize(new Proton.Radius(10, 30));\n  emitter.addInitialize(new Proton.Life(2, 4));\n  emitter.addInitialize(new Proton.Position(new Proton.RectZone(0, 0, layer.canvas.width, layer.canvas.height)));\n  emitter.addBehaviour(new Proton.Alpha(0, 0.4, Infinity, Proton.easeOutCubic));\n  emitter.addBehaviour(new Proton.Scale(1, 0, Infinity, Proton.easeOutCubic));\n  emitter.addBehaviour(new Proton.Color('random'));\n  emitter.emit();\n  return emitter;\n}\n\nconst proton = createProton();\nfunction tick() {\n  requestAnimationFrame(tick);\n  proton.update();\n}\ntick(proton);"}}]);