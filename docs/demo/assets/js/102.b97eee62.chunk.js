(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{618:function(n,t,i){"use strict";i.r(t),t.default="const birdsJsonUrl = 'https://s5.ssl.qhres.com/static/5f6911b7b91c88da.json';\nconst birdsRes = 'https://p.ssl.qhimg.com/d/inn/c886d09f/birds.png';\nconst container = document.getElementById('paper');\nconst spriteCount = document.getElementById('spriteCount');\nconst drawCalls = document.getElementById('drawCalls');\n\n/* globals Animator */\nconst paper = new spritejs.Scene({\n  container,\n  width: 800,\n  height: 800,\n});\n\n(async function () {\n  class Bird extends spritejs.Sprite {\n    constructor() {\n      super('bird1.png');\n    }\n  }\n\n  await paper.preload([birdsRes, birdsJsonUrl]);\n\n  const bglayer = paper.layer('bg'), // \u80cc\u666f\u5c42\n    // \u524d\u666f\u5c42\n    // \u4e0d\u4ee3\u7406\u4e8b\u4ef6\uff0c\u63d0\u5347\u6027\u80fd\n    fglayer = paper.layer('fg', {\n      handleEvent: false,\n    });\n\n  const axisZero = [400, 400];\n  const circle = new spritejs.Sprite();\n\n  circle.attr({\n    anchor: [0.5, 0.5],\n    size: [800, 800],\n    pos: axisZero,\n    bgcolor: '#139',\n    opacity: 0.5,\n    borderRadius: 400,\n  });\n\n  bglayer.appendChild(circle);\n\n  function pointAdd(p1, p2 = [0, 0]) {\n    return [p1[0] + p2[0], p1[1] + p2[1]].map(Math.round);\n  }\n\n  function pointSub(p1, p2 = [0, 0]) {\n    return [p1[0] - p2[0], p1[1] - p2[1]].map(Math.round);\n  }\n\n  function sleep(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  }\n\n  async function randomAnimate(bird) {\n    const birdPoint = bird.attr('pos');\n    const randomArc = Math.random() * 2 * Math.PI;\n    const randomPoint = pointAdd([350 * Math.cos(randomArc),\n      350 * Math.sin(randomArc)], axisZero);\n\n    const dist = pointSub(randomPoint, birdPoint);\n    const distance = Math.round(Math.sqrt(dist[0] * dist[0] + dist[1] * dist[1]));\n    const flip = dist[0] < 0 ? -1 : 1;\n    const duration = 5 * distance + 100;\n\n    bird.attr('scale', [flip, 1]); // scale \u653e\u5728\u5916\u9762\uff0c\u89e6\u53d1\u7f13\u5b58\n\n    const anim = new Animator(duration, (p) => {\n      const pos = pointAdd(birdPoint, [p * dist[0], p * dist[1]]);\n      bird.attr({pos});\n    });\n    await anim.animate();\n\n    // const anim = bird.animate([\n    //   {pos: birdPoint},\n    //   {pos: pointAdd(birdPoint, dist)}\n    // ], {\n    //   duration,\n    //   fill: \"forwards\",\n    // })\n    // await anim.finished\n\n    // await sleep(500);\n  }\n\n  let birdCount = 0;\n  async function addBird() {\n    spriteCount.innerHTML = ++birdCount;\n    const bird = new Bird();\n\n    bird.attr({\n      anchor: [0.5, 0.5],\n      pos: axisZero,\n      size: [86, 60],\n      // bgcolor: 'red',\n    });\n    window.bird = bird;\n\n    fglayer.appendChild(bird);\n\n    let idx = 0;\n    setInterval(() => {\n      // bird.forceUpdate();\n      bird.attributes.texture = `bird${++idx % 3 + 1}.png`;\n    }, 100);\n\n    randomAnimate(bird);\n    // noprotect\n    do {\n      await randomAnimate(bird); // eslint-disable-line no-await-in-loop\n    } while(1);\n  }\n\n  addBird();\n\n  circle.addEventListener('click', (evt) => {\n    addBird();\n  });\n\n  requestAnimationFrame(function f() {\n    if(birdCount < 500) {\n      addBird();\n      requestAnimationFrame(f);\n    }\n  });\n\n  setInterval(() => {\n    // console.log('tick');\n    drawCalls.innerHTML = fglayer.renderer._drawCalls;\n  }, 100);\n}());"}}]);