(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{621:function(n,t,o){"use strict";o.r(t),t.default="const container = document.getElementById('paper');\nconst spriteCount = document.getElementById('spriteCount');\nconst drawCalls = document.getElementById('drawCalls');\n\n/* globals Animator */\nconst scene = new spritejs.Scene({container, width: 800, height: 800});\n\nconst bglayer = scene.layer('bg'), // \u80cc\u666f\u5c42\n  // \u524d\u666f\u5c42\n  // \u4e0d\u4ee3\u7406\u4e8b\u4ef6\uff0c\u63d0\u5347\u6027\u80fd\n  fglayer = scene.layer('fg', {\n    handleEvent: false,\n  });\n\nconst axisZero = [400, 400];\nconst circle = new spritejs.Block();\n\ncircle.attr({\n  anchor: [0.5, 0.5],\n  size: [800, 800],\n  pos: axisZero,\n  bgcolor: '#139',\n  opacity: 0.5,\n  borderRadius: 400,\n});\n\nbglayer.appendChild(circle);\n\nfunction pointAdd(p1, p2 = [0, 0]) {\n  return [p1[0] + p2[0], p1[1] + p2[1]].map(Math.round);\n}\n\nfunction pointSub(p1, p2 = [0, 0]) {\n  return [p1[0] - p2[0], p1[1] - p2[1]].map(Math.round);\n}\n\nfunction sleep(time) {\n  return new Promise(resolve => setTimeout(resolve, time));\n}\n\nasync function randomAnimate(cloud, i) {\n  cloud._pos = cloud._pos || [];\n  const fromPoint = cloud._pos[i] || [0, 0];\n  const randomArc = Math.random() * 2 * Math.PI;\n  const randomPoint = pointAdd([350 * Math.cos(randomArc),\n    350 * Math.sin(randomArc)], [0, 0]);\n\n  const dist = pointSub(randomPoint, fromPoint);\n  const distance = Math.round(Math.sqrt(dist[0] * dist[0] + dist[1] * dist[1]));\n  const duration = 5 * distance + 100;\n\n  const anim = new Animator(duration, (p) => {\n    const pos = pointAdd(fromPoint, [p * dist[0], p * dist[1]]);\n    const rotate = p * 720;\n    // sprite.forceUpdate()\n    // sprite.attr({\n    //   pos,\n    //   rotate,\n    // })\n    // console.log(pos);\n    cloud.setTransform(i, null);\n    cloud.translate(i, pos);\n    cloud.rotate(i, rotate, pos);\n    cloud._pos[i] = pos;\n  });\n\n  await anim.animate();\n  // await sleep(500)\n}\n\nconst group = new spritejs.Group();\ngroup.attr({\n  anchor: [0.5, 0.5],\n  pos: axisZero,\n  size: [60, 60],\n  bgcolor: 'white',\n});\n\nconst center = new spritejs.Block();\ncenter.attr({\n  anchor: [0.5, 0.5],\n  pos: [0, 0],\n  size: [20, 20],\n  borderRadius: 10,\n  bgcolor: 'black',\n});\n\nconst _top = center.cloneNode();\n_top.attr({\n  pos: [0, -20],\n});\n\nconst right = center.cloneNode();\nright.attr({\n  pos: [20, 0],\n});\n\nconst bottom = center.cloneNode();\nbottom.attr({\n  pos: [0, 20],\n});\n\nconst left = center.cloneNode();\nleft.attr({\n  pos: [-20, 0],\n});\n\ngroup.append(center, _top, right, bottom, left);\ngroup.seal();\n\nconst cloud = new spritejs.Cloud(group, 2000);\n\nfglayer.appendChild(cloud);\n\nlet _spriteCount = 0;\n\nasync function addSprite(idx) {\n  _spriteCount++;\n  spriteCount.innerHTML = _spriteCount * 5;\n  do {\n    await randomAnimate(cloud, idx); // eslint-disable-line no-await-in-loop\n  } while(1);\n}\n\nrequestAnimationFrame(function f() {\n  if(_spriteCount < 1000) {\n    addSprite(_spriteCount);\n    requestAnimationFrame(f);\n  }\n});\n\nsetInterval(() => {\n  // console.log('tick');\n  drawCalls.innerHTML = fglayer.renderer._drawCalls;\n}, 100);"}}]);