(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{603:function(n,e,t){"use strict";t.r(e),e.default="const vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform mat3 normalMatrix;\n\n    varying vec2 vUv;\n    varying vec3 vNormal;\n\n    void main() {\n        vUv = uv;\n        vNormal = normalize(normalMatrix * normal);\n        \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    uniform sampler2D tMap;\n\n    varying vec2 vUv;\n    varying vec3 vNormal;\n\n    void main() {\n        vec3 normal = normalize(vNormal);\n        float lighting = 0.2 * dot(normal, normalize(vec3(-0.3, 0.8, 0.6)));\n        vec3 tex = texture2D(tMap, vUv).rgb;\n        gl_FragColor.rgb = tex + lighting + vec3(vUv - 0.5, 0.0) * 0.1;\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nconst {Scene} = spritejs;\nconst {Cube, RenderTarget} = spritejs.ext3d;\nconst container = document.getElementById('container');\nconst scene = new Scene({\n  container,\n  displayRatio: 2,\n});\nconst layer = scene.layer3d('fglayer', {\n  camera: {\n    fov: 35,\n  },\n});\n\nlayer.camera.attributes.pos = [0, 1, 5];\nlayer.camera.lookAt([0, 0, 0]);\n\nconst texture = layer.createTexture({\n  image: new Uint8Array([\n    191, 25, 54, 255,\n    96, 18, 54, 255,\n    96, 18, 54, 255,\n    37, 13, 53, 255,\n  ]),\n  width: 2,\n  height: 2,\n  magFilter: layer.gl.NEAREST,\n});\n\nconst program = layer.createProgram({\n  vertex,\n  fragment,\n  texture,\n});\n\nconst target = new RenderTarget(layer.gl, {\n  width: 512,\n  height: 512,\n  camera: {\n    fov: 35,\n  },\n});\ntarget.camera.attributes.pos = [0, 1, 5];\ntarget.camera.lookAt([0, 0, 0]);\n\nconst mesh = new Cube(program);\ntarget.append(mesh);\n\nconst targetProgram = layer.createProgram({\n  vertex,\n  fragment,\n  texture: target.texture,\n});\n\ntarget.addEventListener('beforerender', (e) => {\n  layer.gl.clearColor(0.15, 0.05, 0.2, 1);\n});\n\ntarget.addEventListener('afterrender', (e) => {\n  layer.gl.clearColor(1, 1, 1, 0);\n});\n\nconst mesh2 = new Cube(targetProgram);\nlayer.append(mesh2);\n\nlayer.tick(() => {\n  layer.renderTarget(target);\n  mesh.attributes.rotateY -= 1.5;\n  mesh2.attributes.rotateY -= 0.9;\n  mesh2.attributes.rotateX -= 1;\n});"}}]);